FedoraCoreOSversion: 32.20201104.3.0
bastionIPPort: 10.1.0.1:8080

okd:
  image:
    registry: "docker.io"
    repository: "lsdopen/okd-installer"
    tag: "latest"
  version: 4.5.0-0.okd-2020-10-15-235428

registry:
  enabled: true
  image:
    registry: "docker.io"
    repository: "registry"
    tag: "2"

nginx:
  image:
    registry: "docker.io"
    repository: "nginx"
    tag: "stable-alpine"
  config: |-
    server {
        listen       8080;
        listen  [::]:8080;
        server_name  localhost;
        location / {
            root   /srv/okd-installer;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /srv/okd-installer;
        }
    }

dnsmasq:
  enabled: true
  image:
    registry: "docker.io"
    repository: "lsdopen/dnsmasq-docker"
    tag: "latest"
  # Below is a standard dnsmasq.conf configuration. Modify appropriately
  config: |-
    # https://github.com/PowerDNS/dnsmasq/blob/master/dnsmasq.conf.example
    bogus-priv
    filterwin2k
    expand-hosts
    domain=lab-01.okd.lsdopen.io
    local=/lab-01.okd.lsdopen.io/
    address=/lab-01.okd.lsdopen.io/10.1.0.1
    domain-needed
    bind-interfaces

    # PXE
    enable-tftp
    tftp-root=/srv/pxe
    dhcp-boot=lpxelinux.0

    # DHCP & DNS & PTR
    log-dhcp
    dhcp-authoritative
    ## DHPC Range
    dhcp-range=10.1.0.2,10.1.0.10,255.255.255.240,12h
    ## Gateway
    dhcp-option=option:router,10.1.0.14
    ## The IP address of the Bastion (this server)
    dhcp-option=option:dns-server,10.1.0.1

    # OKD DNS Entries
    # The fields are <name>,<target>,<port>,<priority>,<weight>
    srv-host=_etcd-server-ssl._tcp.lab-01.okd.lsdopen.io,etcd-0.lab-01.okd.lsdopen.io.,2380,0,10
    srv-host=_etcd-server-ssl._tcp.lab-01.okd.lsdopen.io,etcd-1.lab-01.okd.lsdopen.io.,2380,0,10
    srv-host=_etcd-server-ssl._tcp.lab-01.okd.lsdopen.io,etcd-2.lab-01.okd.lsdopen.io.,2380,0,10

    ## Statically assigned IP addresses
    ### bootstrap-01.lab-01.okd.lsdopen.io
    dhcp-host=10.1.0.2,00:50:56:01:15:96,bootstrap-01,24h
    ptr-record=2.0.1.10.in-addr.arpa.,"bootstrap-01.lab-01.okd.lsdopen.io"

    ### controlplane-01.lab-01.okd.lsdopen.io
    dhcp-host=10.1.0.3,00:50:56:01:15:a6,controlplane-01,24h
    ptr-record=3.0.1.10.in-addr.arpa.,"controlplane-01.lab-01.okd.lsdopen.io"

    ### controlplane-02.lab-01.okd.lsdopen.io
    dhcp-host=10.1.0.4,00:50:56:01:15:a7,controlplane-02,24h
    ptr-record=4.0.1.10.in-addr.arpa.,"controlplane-02.lab-01.okd.lsdopen.io"

    ### controlplane-03.lab-01.okd.lsdopen.io
    dhcp-host=10.1.0.5,00:50:56:01:16:47,controlplane-03,24h
    ptr-record=5.0.1.10.in-addr.arpa.,"controlplane-03.lab-01.okd.lsdopen.io"

    ### worker-01.lab-01.okd.lsdopen.io
    dhcp-host=10.1.0.6,00:50:56:01:15:fa,worker-01,24h
    ptr-record=6.0.1.10.in-addr.arpa.,"worker-01.lab-01.okd.lsdopen.io"

    ### worker-02.lab-01.okd.lsdopen.io
    dhcp-host=10.1.0.7,00:50:56:01:16:1c,worker-02,24h
    ptr-record=7.0.1.10.in-addr.arpa.,"worker-02.lab-01.okd.lsdopen.io"

haproxy:
  enabled: true
  image:
    registry: "docker.io"
    repository: "haproxy"
    tag: "alpine"
  # Below is a standard haproxy.conf configuration. Modify appropriately
  config: |-
    global
      daemon
    defaults
      mode                    http
      log                     global
      option                  httplog
      option                  dontlognull
      option forwardfor       except 127.0.0.0/8
      option                  redispatch
      retries                 3
      timeout http-request    10s
      timeout queue           1m
      timeout connect         10s
      timeout client          300s
      timeout server          300s
      timeout http-keep-alive 10s
      timeout check           10s
      maxconn                 20000
    frontend  kube-api
      bind *:6443
      default_backend kube-api
      mode tcp
      option tcplog
    backend kube-api
       balance source
       mode tcp
       server bootstrap1    10.1.0.2:6443 check
       server controlplane1 10.1.0.3:6443 check check fall 2 rise 2
       server controlplane2 10.1.0.4:6443 check check fall 2 rise 2
       server controlplane3 10.1.0.5:6443 check check fall 2 rise 2
    frontend machine-config
      bind *:22623
      default_backend machine-config
      mode tcp
      option tcplog
    backend machine-config
       balance source
       mode tcp
       server bootstrap1    10.1.0.2:22623 check
       server controlplane1 10.1.0.3:22623 check fall 2 rise 2
       server controlplane2 10.1.0.4:22623 check fall 2 rise 2
       server controlplane3 10.1.0.5:22623 check fall 2 rise 2
    frontend openshift-router-http
      bind *:80
      default_backend openshift-router-http
      mode http
    backend openshift-router-http
      balance source
      mode http
      server infra1 10.1.0.6:80 check fall 3 rise 2
      server infra2 10.1.0.7:80 check fall 3 rise 2
      server infra3 10.1.0.8:80 check fall 3 rise 2
    frontend openshift-router-https
      bind *:443
      default_backend openshift-router-https
      mode tcp
      option tcplog
    backend openshift-router-https
      balance source
      mode tcp
      server infra1 10.1.0.6:443 check fall 3 rise 2
      server infra2 10.1.0.7:443 check fall 3 rise 2
      server infra3 10.1.0.8:443 check fall 3 rise 2